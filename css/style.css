/* Base Styles with Animated Gradient Background */
body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a6c1ee);
    background-size: 400% 400%;
    animation: gradientBG 15s ease infinite;
    color: #333;
    min-height: 100vh;
    position: relative;
    overflow-x: hidden;
    line-height: 1.6;
}

@keyframes gradientBG {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Container with Glass Morphism Effect */
.container {
    max-width: 1100px;
    margin: 30px auto;
    padding: 30px;
    background: rgba(255, 255, 255, 0.85);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 20px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.18);
    position: relative;
    overflow: hidden;
    z-index: 1;
    transition: transform 0.3s ease;
}

.container:hover {
    transform: translateY(-5px);
}

/* Header with Animated Gradient Text */
header {
    text-align: center;
    margin-bottom: 50px;
}

h1 {
    font-size: 3.5rem;
    margin-bottom: 15px;
    background: linear-gradient(45deg, #ff6b6b, #ff8e8e, #ff4757, #ff6b81);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 300% 300%;
    animation: gradientText 8s ease infinite;
    font-weight: 700;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

@keyframes gradientText {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

/* Name with Interactive Animation */
.name {
    font-size: 5rem;
    font-weight: 800;
    margin: 30px 0;
    background: linear-gradient(45deg, #ff4757, #ff6b81, #ff8e8e);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.15);
    animation: pulse 2s infinite, rainbow 8s infinite;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.name:hover {
    transform: scale(1.05) rotate(-2deg);
    animation: pulse 0.5s infinite, rainbow 4s infinite;
}

/* Navigation Buttons with Ripple Effect */
.navigation {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 20px;
    margin: 40px 0;
}

.nav-btn, .back-btn {
    position: relative;
    overflow: hidden;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 15px 30px;
    background: linear-gradient(45deg, #ff6b6b, #ff8e8e);
    color: white;
    text-decoration: none;
    border-radius: 50px;
    font-size: 1.2rem;
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    box-shadow: 0 6px 15px rgba(255, 107, 107, 0.3);
    border: none;
    cursor: pointer;
    min-width: 200px;
    z-index: 1;
}

.nav-btn::after, .back-btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%);
    transform-origin: 50% 50%;
}

.nav-btn:hover, .back-btn:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 12px 25px rgba(255, 107, 107, 0.4);
    background: linear-gradient(45deg, #ff4757, #ff6b81);
}

.nav-btn:active::after, .back-btn:active::after {
    animation: ripple 1s ease-out;
}

@keyframes ripple {
    0% {
        transform: scale(0, 0);
        opacity: 1;
    }
    100% {
        transform: scale(20, 20);
        opacity: 0;
    }
}

/* Cake with Interactive Animation */
.home-page .cake {
    font-size: 10rem;
    text-align: center;
    margin: 40px 0;
    cursor: pointer;
    transition: all 0.3s ease;
    text-shadow: 0 0 20px rgba(255, 107, 107, 0.5);
    animation: bounce 2s infinite, glow 2s infinite;
}

.home-page .cake:hover {
    transform: scale(1.1) rotate(10deg);
    animation: bounce 0.5s infinite, glow 1s infinite;
    filter: drop-shadow(0 0 10px rgba(255, 107, 107, 0.7));
}

/* Photo Gallery with Interactive Tilt Effect */
.photo-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 25px;
    margin: 40px 0;
    perspective: 1000px;
}

.photo-item {
    background: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    transform-style: preserve-3d;
    position: relative;
}

.photo-item:hover {
    transform: translateY(-10px) rotateX(5deg) rotateY(5deg);
    box-shadow: 0 15px 35px rgba(255, 107, 107, 0.3);
}

/* Floating Elements with Interactive Movement */
.floating-hearts div,
.floating-balloons div,
.sparkles div {
    position: absolute;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.floating-hearts div:hover,
.floating-balloons div:hover,
.sparkles div:hover {
    transform: scale(1.5) rotate(20deg);
    animation: none !important;
}

/* Touch Animation Class */
.touch-animate {
    animation: touchPulse 0.5s ease-out;
}

@keyframes touchPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Add this JavaScript to handle touch animations */
document.addEventListener('DOMContentLoaded', function() {
    // Add touch animation to interactive elements
    const interactiveElements = document.querySelectorAll(
        '.name, .nav-btn, .back-btn, .cake, .photo-item, .message-card'
    );
    
    interactiveElements.forEach(el => {
        // For mouse devices
        el.addEventListener('mouseover', function() {
            this.classList.add('touch-animate');
            setTimeout(() => {
                this.classList.remove('touch-animate');
            }, 500);
        });
        
        // For touch devices
        el.addEventListener('touchstart', function() {
            this.classList.add('touch-animate');
            setTimeout(() => {
                this.classList.remove('touch-animate');
            }, 500);
        });
    });

    // Make floating elements draggable
    const floatingElements = document.querySelectorAll(
        '.floating-hearts div, .floating-balloons div, .sparkles div'
    );
    
    floatingElements.forEach(el => {
        let isDragging = false;
        let offsetX, offsetY;
        
        el.addEventListener('mousedown', startDrag);
        el.addEventListener('touchstart', startDrag);
        
        function startDrag(e) {
            isDragging = true;
            const clientX = e.clientX || e.touches[0].clientX;
            const clientY = e.clientY || e.touches[0].clientY;
            
            const rect = el.getBoundingClientRect();
            offsetX = clientX - rect.left;
            offsetY = clientY - rect.top;
            
            el.style.transition = 'none';
            el.style.zIndex = '100';
            el.style.willChange = 'transform';
            
            document.addEventListener('mousemove', drag);
            document.addEventListener('touchmove', drag);
            document.addEventListener('mouseup', endDrag);
            document.addEventListener('touchend', endDrag);
        }
        
        function drag(e) {
            if (!isDragging) return;
            e.preventDefault();
            
            const clientX = e.clientX || e.touches[0].clientX;
            const clientY = e.clientY || e.touches[0].clientY;
            
            el.style.left = `${clientX - offsetX}px`;
            el.style.top = `${clientY - offsetY}px`;
        }
        
        function endDrag() {
            isDragging = false;
            el.style.transition = 'transform 0.3s ease';
            el.style.zIndex = '';
            el.style.willChange = '';
            
            document.removeEventListener('mousemove', drag);
            document.removeEventListener('touchmove', drag);
            document.removeEventListener('mouseup', endDrag);
            document.removeEventListener('touchend', endDrag);
        }
    });
});
